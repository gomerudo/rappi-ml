services:
    db:
        restart: always
        image: mysql/mysql-server:8.0.26
        container_name: rappi-db
        expose:
            - "3306"
        networks:
            - backend
        environment:
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        volumes:
            - dbdata:/var/lib/mysql

    ml-server:
        restart: always
        build: 
            context: ./
            args:
                RAPPI_WORKSPACE: ${CONTAINER_WORKSPACE}
            dockerfile: docker/mlflow/Dockerfile
        image: rappi-mlflow
        container_name: rappi-mlflow
        expose:
            - "5000"
        networks:
            - frontend
            - backend
        command: >
            bash -c "python ${CONTAINER_WORKSPACE}/scripts/train.py --input_csv ${CONTAINER_WORKSPACE}/data/orders.csv --output_dir ${CONTAINER_WORKSPACE}/models/taken-orders
            && mlflow models serve -m ${CONTAINER_WORKSPACE}/models/taken-orders -h 0.0.0.0"

    web-endpoint:
        restart: always
        build: 
            context: ./
            args:
                APP_DIR: ${CONTAINER_WORKSPACE}
            dockerfile: docker/webapp/Dockerfile
        image: rappi-endpoint
        container_name: rappi-endpoint
        expose:
            - "5001"
        networks:
            - frontend
            - backend
        environment:
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
        command: flask run --host 0.0.0.0 -p 5001

    nginx:
        restart: always
        build:
            context: ./docker/nginx
            dockerfile: Dockerfile
        image: rappi-nginx
        container_name: rappi-nginx
        ports:
            - "81:80"
        networks:
            - frontend
        depends_on:
            - ml-server

networks:
    frontend:
        driver: bridge
    backend:
        driver: bridge

volumes:
    dbdata:
